name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

# Allow only 1 CD workflow at a time
concurrency:
  group: cd
  cancel-in-progress: false

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
  
  create_release:
    runs-on: windows-latest
    needs: ci
    defaults: 
      run:
        shell: pwsh

    env:
      app_path: ./HaddySimHub
      dotnet_version: '9.0.100'
      node-version: 20
      clientapp_folder: './ClientApp/'
      dist_folder: '/dist'
      RELEASE_VERSION: v0.1.${{github.run_number}}
      solution_file: ./HaddySimHub.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          nuget-${{ runner.os }}-

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.dotnet_version }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.solution_file }}

    - name: Publish server app
      run: dotnet publish ./HaddySimHub -r win-x64 -p:PublishDir=${{env.dist_folder}} --no-restore

    - name: Publish updater app
      run: dotnet publish ./Updater -r win-x64 -p:PublishDir=${{env.dist_folder}} --no-restore

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.node-version }}
    
    - name: Install client app dependencies
      working-directory: ${{ env.clientapp_folder }}
      run: |
        Remove-Item package-lock.json
        npm ci

    - name: Build client app
      working-directory: ${{ env.clientapp_folder }}
      run: npm run build --omit=dev

    - name: Copy client app to distribution folder
      run: |
        mkdir -Force ${{ env.dist_folder }}\wwwroot
        robocopy ${{ env.clientapp_folder }}dist/haddy-sim-hub-client/browser ${{ env.dist_folder }}\wwwroot /E

    - name: Zip build result
      run: Compress-Archive -Path ${{ env.dist_folder }}/* -Destination haddy-simhub.zip

    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: true
        prerelease: false

    - name: Upload release assets
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: haddy-simhub.zip
        asset_name: haddy-simhub.zip
        asset_content_type: application/zip
      
    - name: Publish Release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        release_id: ${{steps.create_release.outputs.id}}
